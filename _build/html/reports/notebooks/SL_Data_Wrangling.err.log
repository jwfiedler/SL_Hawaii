Traceback (most recent call last):
  File "/Users/juliafiedler/anaconda3/envs/SLI39/lib/python3.9/site-packages/jupyter_cache/executors/utils.py", line 58, in single_nb_execution
    executenb(
  File "/Users/juliafiedler/anaconda3/envs/SLI39/lib/python3.9/site-packages/nbclient/client.py", line 1305, in execute
    return NotebookClient(nb=nb, resources=resources, km=km, **kwargs).execute()
  File "/Users/juliafiedler/anaconda3/envs/SLI39/lib/python3.9/site-packages/jupyter_core/utils/__init__.py", line 165, in wrapped
    return loop.run_until_complete(inner)
  File "/Users/juliafiedler/anaconda3/envs/SLI39/lib/python3.9/asyncio/base_events.py", line 647, in run_until_complete
    return future.result()
  File "/Users/juliafiedler/anaconda3/envs/SLI39/lib/python3.9/site-packages/nbclient/client.py", line 705, in async_execute
    await self.async_execute_cell(
  File "/Users/juliafiedler/anaconda3/envs/SLI39/lib/python3.9/site-packages/nbclient/client.py", line 1058, in async_execute_cell
    await self._check_raise_for_error(cell, cell_index, exec_reply)
  File "/Users/juliafiedler/anaconda3/envs/SLI39/lib/python3.9/site-packages/nbclient/client.py", line 914, in _check_raise_for_error
    raise CellExecutionError.from_cell_and_msg(cell, exec_reply_content)
nbclient.exceptions.CellExecutionError: An error occurred while executing the following cell:
------------------
# Extract data for the nearest point to the tide gauge location that has data
sla = []
for lat, lon in zip(rsl['lat'].values, rsl['lon'].values):
    sla.append(ds['sla'].sel(
        longitude=lon-360, latitude=lat, method='nearest'
    ))

    #if the data is null, nan average over the nearest 4 points
    tol = 0.25
    if sla[-1].isnull().all():
        sla[-1] = ds['sla'].sel(
            longitude=slice(lon-360-tol, lon-360+tol), 
            latitude=slice(lat-tol, lat+tol)
        ).mean(dim=['latitude', 'longitude'])
        sla[-1]['latitude'] = np.mean(lat)
        sla[-1]['longitude'] = np.mean(lon)

sla = xr.concat(sla, dim='record_id')

#load rsl_hawaii as rsl
rsl = xr.open_dataset(data_dir / 'rsl_hawaii.nc')



# make sla a dataset with variables from rsl
sla = sla.to_dataset(name='sla')
sla['station_name'] = rsl['station_name']

# Creating lat_str and lon_str arrays with 'record_id' as their dimension
lat_str = [f'{np.abs(lat):.3f}\u00B0{"N" if lat > 0 else "S"}' for lat in sla.latitude.values]
lon_str = [f'{np.abs(lon):.3f}\u00B0{"E" if lon > 0 else "W"}' for lon in sla.longitude.values]  

# Convert lists to DataArrays with 'record_id' as their dimension
lat_str_da = xr.DataArray(lat_str, dims=['record_id'], coords={'record_id': rsl['record_id']})
lon_str_da = xr.DataArray(lon_str, dims=['record_id'], coords={'record_id': rsl['record_id']})

# Assign these DataArrays to the sla dataset
sla['lat_str'] = lat_str_da
sla['lon_str'] = lon_str_da

# add original data source to attributes
sla.attrs['original_data_source'] = 'CMEMS L4 SSH 0.25deg'
sla.attrs['title'] = ds.attrs['title']
sla.attrs['source_file'] = str(data_dir / fname_cmems)

# ensure latitude and longitude are coordinates associated with a location
sla = sla.set_coords(['latitude', 'longitude'])



sla
------------------


[0;31m---------------------------------------------------------------------------[0m
[0;31mValueError[0m                                Traceback (most recent call last)
Cell [0;32mIn[23], line 27[0m
[1;32m     25[0m [38;5;66;03m# make sla a dataset with variables from rsl[39;00m
[1;32m     26[0m sla [38;5;241m=[39m sla[38;5;241m.[39mto_dataset(name[38;5;241m=[39m[38;5;124m'[39m[38;5;124msla[39m[38;5;124m'[39m)
[0;32m---> 27[0m [43msla[49m[43m[[49m[38;5;124;43m'[39;49m[38;5;124;43mstation_name[39;49m[38;5;124;43m'[39;49m[43m][49m [38;5;241m=[39m rsl[[38;5;124m'[39m[38;5;124mstation_name[39m[38;5;124m'[39m]
[1;32m     29[0m [38;5;66;03m# Creating lat_str and lon_str arrays with 'record_id' as their dimension[39;00m
[1;32m     30[0m lat_str [38;5;241m=[39m [[38;5;124mf[39m[38;5;124m'[39m[38;5;132;01m{[39;00mnp[38;5;241m.[39mabs(lat)[38;5;132;01m:[39;00m[38;5;124m.3f[39m[38;5;132;01m}[39;00m[38;5;130;01m\u00B0[39;00m[38;5;132;01m{[39;00m[38;5;124m"[39m[38;5;124mN[39m[38;5;124m"[39m[38;5;250m [39m[38;5;28;01mif[39;00m[38;5;250m [39mlat[38;5;250m [39m[38;5;241m>[39m[38;5;250m [39m[38;5;241m0[39m[38;5;250m [39m[38;5;28;01melse[39;00m[38;5;250m [39m[38;5;124m"[39m[38;5;124mS[39m[38;5;124m"[39m[38;5;132;01m}[39;00m[38;5;124m'[39m [38;5;28;01mfor[39;00m lat [38;5;129;01min[39;00m sla[38;5;241m.[39mlatitude[38;5;241m.[39mvalues]

File [0;32m~/anaconda3/envs/SLI39/lib/python3.9/site-packages/xarray/core/dataset.py:1598[0m, in [0;36mDataset.__setitem__[0;34m(self, key, value)[0m
[1;32m   1593[0m     [38;5;28;01mif[39;00m [38;5;28misinstance[39m(value, Dataset):
[1;32m   1594[0m         [38;5;28;01mraise[39;00m [38;5;167;01mTypeError[39;00m(
[1;32m   1595[0m             [38;5;124m"[39m[38;5;124mCannot assign a Dataset to a single key - only a DataArray or Variable [39m[38;5;124m"[39m
[1;32m   1596[0m             [38;5;124m"[39m[38;5;124mobject can be stored under a single key.[39m[38;5;124m"[39m
[1;32m   1597[0m         )
[0;32m-> 1598[0m     [38;5;28;43mself[39;49m[38;5;241;43m.[39;49m[43mupdate[49m[43m([49m[43m{[49m[43mkey[49m[43m:[49m[43m [49m[43mvalue[49m[43m}[49m[43m)[49m
[1;32m   1600[0m [38;5;28;01melif[39;00m utils[38;5;241m.[39miterable_of_hashable(key):
[1;32m   1601[0m     keylist [38;5;241m=[39m [38;5;28mlist[39m(key)

File [0;32m~/anaconda3/envs/SLI39/lib/python3.9/site-packages/xarray/core/dataset.py:5600[0m, in [0;36mDataset.update[0;34m(self, other)[0m
[1;32m   5564[0m [38;5;28;01mdef[39;00m [38;5;21mupdate[39m([38;5;28mself[39m, other: CoercibleMapping) [38;5;241m-[39m[38;5;241m>[39m Self:
[1;32m   5565[0m [38;5;250m    [39m[38;5;124;03m"""Update this dataset's variables with those from another dataset.[39;00m
[1;32m   5566[0m 
[1;32m   5567[0m [38;5;124;03m    Just like :py:meth:`dict.update` this is a in-place operation.[39;00m
[0;32m   (...)[0m
[1;32m   5598[0m [38;5;124;03m    Dataset.merge[39;00m
[1;32m   5599[0m [38;5;124;03m    """[39;00m
[0;32m-> 5600[0m     merge_result [38;5;241m=[39m [43mdataset_update_method[49m[43m([49m[38;5;28;43mself[39;49m[43m,[49m[43m [49m[43mother[49m[43m)[49m
[1;32m   5601[0m     [38;5;28;01mreturn[39;00m [38;5;28mself[39m[38;5;241m.[39m_replace(inplace[38;5;241m=[39m[38;5;28;01mTrue[39;00m, [38;5;241m*[39m[38;5;241m*[39mmerge_result[38;5;241m.[39m_asdict())

File [0;32m~/anaconda3/envs/SLI39/lib/python3.9/site-packages/xarray/core/merge.py:1075[0m, in [0;36mdataset_update_method[0;34m(dataset, other)[0m
[1;32m   1072[0m             [38;5;28;01mif[39;00m coord_names:
[1;32m   1073[0m                 other[key] [38;5;241m=[39m value[38;5;241m.[39mdrop_vars(coord_names)
[0;32m-> 1075[0m [38;5;28;01mreturn[39;00m [43mmerge_core[49m[43m([49m
[1;32m   1076[0m [43m    [49m[43m[[49m[43mdataset[49m[43m,[49m[43m [49m[43mother[49m[43m][49m[43m,[49m
[1;32m   1077[0m [43m    [49m[43mpriority_arg[49m[38;5;241;43m=[39;49m[38;5;241;43m1[39;49m[43m,[49m
[1;32m   1078[0m [43m    [49m[43mindexes[49m[38;5;241;43m=[39;49m[43mdataset[49m[38;5;241;43m.[39;49m[43mxindexes[49m[43m,[49m
[1;32m   1079[0m [43m    [49m[43mcombine_attrs[49m[38;5;241;43m=[39;49m[38;5;124;43m"[39;49m[38;5;124;43moverride[39;49m[38;5;124;43m"[39;49m[43m,[49m
[1;32m   1080[0m [43m[49m[43m)[49m

File [0;32m~/anaconda3/envs/SLI39/lib/python3.9/site-packages/xarray/core/merge.py:711[0m, in [0;36mmerge_core[0;34m(objects, compat, join, combine_attrs, priority_arg, explicit_coords, indexes, fill_value, skip_align_args)[0m
[1;32m    708[0m skip_align_objs [38;5;241m=[39m [(pos, objects[38;5;241m.[39mpop(pos)) [38;5;28;01mfor[39;00m pos [38;5;129;01min[39;00m skip_align_args]
[1;32m    710[0m coerced [38;5;241m=[39m coerce_pandas_values(objects)
[0;32m--> 711[0m aligned [38;5;241m=[39m [43mdeep_align[49m[43m([49m
[1;32m    712[0m [43m    [49m[43mcoerced[49m[43m,[49m[43m [49m[43mjoin[49m[38;5;241;43m=[39;49m[43mjoin[49m[43m,[49m[43m [49m[43mcopy[49m[38;5;241;43m=[39;49m[38;5;28;43;01mFalse[39;49;00m[43m,[49m[43m [49m[43mindexes[49m[38;5;241;43m=[39;49m[43mindexes[49m[43m,[49m[43m [49m[43mfill_value[49m[38;5;241;43m=[39;49m[43mfill_value[49m
[1;32m    713[0m [43m[49m[43m)[49m
[1;32m    715[0m [38;5;28;01mfor[39;00m pos, obj [38;5;129;01min[39;00m skip_align_objs:
[1;32m    716[0m     aligned[38;5;241m.[39minsert(pos, obj)

File [0;32m~/anaconda3/envs/SLI39/lib/python3.9/site-packages/xarray/core/alignment.py:952[0m, in [0;36mdeep_align[0;34m(objects, join, copy, indexes, exclude, raise_on_invalid, fill_value)[0m
[1;32m    949[0m     [38;5;28;01melse[39;00m:
[1;32m    950[0m         out[38;5;241m.[39mappend(variables)
[0;32m--> 952[0m aligned [38;5;241m=[39m [43malign[49m[43m([49m
[1;32m    953[0m [43m    [49m[38;5;241;43m*[39;49m[43mtargets[49m[43m,[49m
[1;32m    954[0m [43m    [49m[43mjoin[49m[38;5;241;43m=[39;49m[43mjoin[49m[43m,[49m
[1;32m    955[0m [43m    [49m[43mcopy[49m[38;5;241;43m=[39;49m[43mcopy[49m[43m,[49m
[1;32m    956[0m [43m    [49m[43mindexes[49m[38;5;241;43m=[39;49m[43mindexes[49m[43m,[49m
[1;32m    957[0m [43m    [49m[43mexclude[49m[38;5;241;43m=[39;49m[43mexclude[49m[43m,[49m
[1;32m    958[0m [43m    [49m[43mfill_value[49m[38;5;241;43m=[39;49m[43mfill_value[49m[43m,[49m
[1;32m    959[0m [43m[49m[43m)[49m
[1;32m    961[0m [38;5;28;01mfor[39;00m position, key, aligned_obj [38;5;129;01min[39;00m [38;5;28mzip[39m(positions, keys, aligned):
[1;32m    962[0m     [38;5;28;01mif[39;00m key [38;5;129;01mis[39;00m no_key:

File [0;32m~/anaconda3/envs/SLI39/lib/python3.9/site-packages/xarray/core/alignment.py:888[0m, in [0;36malign[0;34m(join, copy, indexes, exclude, fill_value, *objects)[0m
[1;32m    692[0m [38;5;250m[39m[38;5;124;03m"""[39;00m
[1;32m    693[0m [38;5;124;03mGiven any number of Dataset and/or DataArray objects, returns new[39;00m
[1;32m    694[0m [38;5;124;03mobjects with aligned indexes and dimension sizes.[39;00m
[0;32m   (...)[0m
[1;32m    878[0m 
[1;32m    879[0m [38;5;124;03m"""[39;00m
[1;32m    880[0m aligner [38;5;241m=[39m Aligner(
[1;32m    881[0m     objects,
[1;32m    882[0m     join[38;5;241m=[39mjoin,
[0;32m   (...)[0m
[1;32m    886[0m     fill_value[38;5;241m=[39mfill_value,
[1;32m    887[0m )
[0;32m--> 888[0m [43maligner[49m[38;5;241;43m.[39;49m[43malign[49m[43m([49m[43m)[49m
[1;32m    889[0m [38;5;28;01mreturn[39;00m aligner[38;5;241m.[39mresults

File [0;32m~/anaconda3/envs/SLI39/lib/python3.9/site-packages/xarray/core/alignment.py:575[0m, in [0;36mAligner.align[0;34m(self)[0m
[1;32m    573[0m [38;5;28mself[39m[38;5;241m.[39massert_no_index_conflict()
[1;32m    574[0m [38;5;28mself[39m[38;5;241m.[39malign_indexes()
[0;32m--> 575[0m [38;5;28;43mself[39;49m[38;5;241;43m.[39;49m[43massert_unindexed_dim_sizes_equal[49m[43m([49m[43m)[49m
[1;32m    577[0m [38;5;28;01mif[39;00m [38;5;28mself[39m[38;5;241m.[39mjoin [38;5;241m==[39m [38;5;124m"[39m[38;5;124moverride[39m[38;5;124m"[39m:
[1;32m    578[0m     [38;5;28mself[39m[38;5;241m.[39moverride_indexes()

File [0;32m~/anaconda3/envs/SLI39/lib/python3.9/site-packages/xarray/core/alignment.py:476[0m, in [0;36mAligner.assert_unindexed_dim_sizes_equal[0;34m(self)[0m
[1;32m    474[0m     add_err_msg [38;5;241m=[39m [38;5;124m"[39m[38;5;124m"[39m
[1;32m    475[0m [38;5;28;01mif[39;00m [38;5;28mlen[39m(sizes) [38;5;241m>[39m [38;5;241m1[39m:
[0;32m--> 476[0m     [38;5;28;01mraise[39;00m [38;5;167;01mValueError[39;00m(
[1;32m    477[0m         [38;5;124mf[39m[38;5;124m"[39m[38;5;124mcannot reindex or align along dimension [39m[38;5;132;01m{[39;00mdim[38;5;132;01m!r}[39;00m[38;5;124m [39m[38;5;124m"[39m
[1;32m    478[0m         [38;5;124mf[39m[38;5;124m"[39m[38;5;124mbecause of conflicting dimension sizes: [39m[38;5;132;01m{[39;00msizes[38;5;132;01m!r}[39;00m[38;5;124m"[39m [38;5;241m+[39m add_err_msg
[1;32m    479[0m     )

[0;31mValueError[0m: cannot reindex or align along dimension 'record_id' because of conflicting dimension sizes: {8, 11} (note: an index is found along that dimension with size=11)

